
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CredentialScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  type: 'type',
  data: 'data',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkflowScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  trigger: 'trigger'
};

exports.Prisma.WorkflowNodeScalarFieldEnum = {
  id: 'id',
  workflowId: 'workflowId',
  type: 'type',
  parameters: 'parameters',
  positionX: 'positionX',
  positionY: 'positionY',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  credentialId: 'credentialId',
  trigger: 'trigger'
};

exports.Prisma.WorkflowNodeLinkScalarFieldEnum = {
  id: 'id',
  workflowId: 'workflowId',
  fromNodeId: 'fromNodeId',
  toNodeId: 'toNodeId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ExecutionHistoryScalarFieldEnum = {
  id: 'id',
  workflowId: 'workflowId',
  status: 'status',
  startedAt: 'startedAt',
  finishedAt: 'finishedAt',
  log: 'log'
};

exports.Prisma.NodeExecutionHistoryScalarFieldEnum = {
  id: 'id',
  workflowExecutionId: 'workflowExecutionId',
  nodeId: 'nodeId',
  input: 'input',
  output: 'output',
  status: 'status',
  timestamp: 'timestamp'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Credential: 'Credential',
  Workflow: 'Workflow',
  WorkflowNode: 'WorkflowNode',
  WorkflowNodeLink: 'WorkflowNodeLink',
  ExecutionHistory: 'ExecutionHistory',
  NodeExecutionHistory: 'NodeExecutionHistory'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\ryuga\\Desktop\\n8n\\server\\dist\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\ryuga\\Desktop\\n8n\\server\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../dist/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id          String       @id @default(uuid())\n  email       String       @unique\n  password    String\n  createdAt   DateTime     @default(now())\n  updatedAt   DateTime     @updatedAt\n  workflows   Workflow[]\n  credentials Credential[]\n}\n\nmodel Credential {\n  id        String   @id @default(uuid())\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId    String\n  name      String\n  type      String\n  data      Json\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Workflow {\n  id                 String             @id @default(uuid())\n  user               User               @relation(fields: [userId], references: [id], onDelete: Cascade)\n  userId             String\n  name               String\n  isActive           Boolean            @default(false)\n  createdAt          DateTime           @default(now())\n  updatedAt          DateTime           @updatedAt\n  nodes              WorkflowNode[]\n  nodeLinks          WorkflowNodeLink[]\n  trigger            String             @default(\"manual\") // manual, scheduled, webhook\n  executionHistories ExecutionHistory[]\n}\n\nmodel WorkflowNode {\n  id            String             @id @default(uuid())\n  workflow      Workflow           @relation(fields: [workflowId], references: [id], onDelete: Cascade)\n  workflowId    String\n  type          String // action\n  parameters    Json\n  positionX     Int?\n  positionY     Int?\n  createdAt     DateTime           @default(now())\n  updatedAt     DateTime           @updatedAt\n  credentialId  String?\n  outgoingLinks WorkflowNodeLink[] @relation(\"OutgoingLinks\")\n  incomingLinks WorkflowNodeLink[] @relation(\"IncomingLinks\")\n  trigger       String             @default(\"none\") // none, trigger, action\n}\n\nmodel WorkflowNodeLink {\n  id         String   @id @default(uuid())\n  workflow   Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)\n  workflowId String\n\n  fromNode   WorkflowNode @relation(\"OutgoingLinks\", fields: [fromNodeId], references: [id], onDelete: Cascade)\n  fromNodeId String\n\n  toNode    WorkflowNode @relation(\"IncomingLinks\", fields: [toNodeId], references: [id], onDelete: Cascade)\n  toNodeId  String\n  createdAt DateTime     @default(now())\n  updatedAt DateTime     @updatedAt\n}\n\nmodel ExecutionHistory {\n  id         String    @id @default(uuid())\n  workflow   Workflow  @relation(fields: [workflowId], references: [id], onDelete: Cascade)\n  workflowId String\n  status     String\n  startedAt  DateTime  @default(now())\n  finishedAt DateTime?\n  log        Json\n\n  nodeExecutionHistories NodeExecutionHistory[]\n}\n\nmodel NodeExecutionHistory {\n  id                  String           @id @default(uuid())\n  executionHistory    ExecutionHistory @relation(fields: [workflowExecutionId], references: [id])\n  workflowExecutionId String\n  nodeId              String\n  input               Json\n  output              Json\n  status              String\n  timestamp           DateTime         @default(now())\n}\n",
  "inlineSchemaHash": "00f9091aa42bf7958a7b6c0cea858de433c2b9d68331c5cd4d1ce1629a9b0f33",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workflows\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"UserToWorkflow\"},{\"name\":\"credentials\",\"kind\":\"object\",\"type\":\"Credential\",\"relationName\":\"CredentialToUser\"}],\"dbName\":null},\"Credential\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CredentialToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Workflow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWorkflow\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nodes\",\"kind\":\"object\",\"type\":\"WorkflowNode\",\"relationName\":\"WorkflowToWorkflowNode\"},{\"name\":\"nodeLinks\",\"kind\":\"object\",\"type\":\"WorkflowNodeLink\",\"relationName\":\"WorkflowToWorkflowNodeLink\"},{\"name\":\"trigger\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"executionHistories\",\"kind\":\"object\",\"type\":\"ExecutionHistory\",\"relationName\":\"ExecutionHistoryToWorkflow\"}],\"dbName\":null},\"WorkflowNode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflow\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"WorkflowToWorkflowNode\"},{\"name\":\"workflowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parameters\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"positionX\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"positionY\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"credentialId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"outgoingLinks\",\"kind\":\"object\",\"type\":\"WorkflowNodeLink\",\"relationName\":\"OutgoingLinks\"},{\"name\":\"incomingLinks\",\"kind\":\"object\",\"type\":\"WorkflowNodeLink\",\"relationName\":\"IncomingLinks\"},{\"name\":\"trigger\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"WorkflowNodeLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflow\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"WorkflowToWorkflowNodeLink\"},{\"name\":\"workflowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromNode\",\"kind\":\"object\",\"type\":\"WorkflowNode\",\"relationName\":\"OutgoingLinks\"},{\"name\":\"fromNodeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"toNode\",\"kind\":\"object\",\"type\":\"WorkflowNode\",\"relationName\":\"IncomingLinks\"},{\"name\":\"toNodeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ExecutionHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflow\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"ExecutionHistoryToWorkflow\"},{\"name\":\"workflowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"finishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"log\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"nodeExecutionHistories\",\"kind\":\"object\",\"type\":\"NodeExecutionHistory\",\"relationName\":\"ExecutionHistoryToNodeExecutionHistory\"}],\"dbName\":null},\"NodeExecutionHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"executionHistory\",\"kind\":\"object\",\"type\":\"ExecutionHistory\",\"relationName\":\"ExecutionHistoryToNodeExecutionHistory\"},{\"name\":\"workflowExecutionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nodeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"input\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"output\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

